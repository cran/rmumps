--- dana_aux.F	2019-06-14 16:46:28.000000000 +0200
+++ dana_aux.F	2020-01-17 18:30:39.746290959 +0100
@@ -183,7 +185,7 @@
            INFO( 1 ) = -7
            INFO( 2 ) = N*KEEP(10)
          ENDIF
-         CALL DMUMPS_ANA_GNEW(N,NZ8,IRN(1), ICN(1), IW(1), LIW8,
+         CALL DMUMPS_ANA_GNEW(N,NZ8,IRN, ICN, IW(1), LIW8,
      &        IPE, PTRAR(1,2),
      &        IPQ8, IWL1, IWFR8, KEEP8(126), KEEP8(127),
      &        INFO(1), INFO(2), ICNTL, symmetry, 
@@ -320,7 +322,7 @@
                      INFO( 2 ) = N*KEEP(10)
                   ENDIF
                   CALL DMUMPS_ANA_GNEW
-     &                 (N,NZ8,IRN(1), ICN(1), IW(1), LIW8, 
+     &                 (N,NZ8,IRN, ICN, IW(1), LIW8, 
      &                  IPE, PTRAR(1,2), 
      &                 IPQ8, IWL1, IWFR8, KEEP8(126), KEEP8(127), 
      &                 INFO(1), INFO(2), ICNTL, symmetry, KEEP(50),
@@ -403,12 +405,14 @@
                      IWL1(I) = 1
                   ENDDO
                   IF (PORD_INT_SIZE .EQ. 64) THEN
+#if defined(pord64) /* ssg */
                     CALL MUMPS_PORDF_WND_MIXEDto64(NCMP, IWFR8-1_8,
      &                   IPE, IW,
      &                   IWL1, NCMPA, N, PARENT, 
      &                   INFO(1), LP, LPOK, KEEP(10),
      &                   INPLACE64_GRAPH_COPY
      &                   )
+#endif
                   ELSE IF (PORD_INT_SIZE .EQ. 32) THEN
                     CALL MUMPS_PORDF_WND_MIXEDto32(NCMP, IWFR8-1_8,
      &                   IPE, IW,
@@ -435,12 +439,14 @@
                   ENDDO
                ELSE  
                   IF (PORD_INT_SIZE.EQ.64) THEN
+#if defined(pord64) /* ssg */
                   CALL MUMPS_PORDF_MIXEDto64(NCMP, IWFR8-1_8, IPE,
      &                 IW(1), 
      &                 IWL1, NCMPA, PARENT, 
      &                 INFO(1), LP, LPOK, KEEP(10),
      &                 INPLACE64_GRAPH_COPY
      &                 )
+#endif
                   ELSE IF (PORD_INT_SIZE.EQ.32) THEN
                   CALL MUMPS_PORDF_MIXEDto32(NCMP, IWFR8-1_8, IPE,
      &                 IW(1), 
@@ -639,6 +648,7 @@
      &           IKEEP2, IKEEP1, INFO(1), LP,LPOK,KEEP(10), 
      &           LIW8, INPLACE64_GRAPH_COPY,
      &           INPLACE64_RESTORE_GRAPH)
+#endif
            ELSE
               WRITE(*,*)
      &        "Internal error in METIS wrappers, METIS_IDX_SIZE=",
@@ -665,6 +676,7 @@
      &        IKEEP2, IKEEP1, INFO(1), LP,LPOK,KEEP(10),
      &        LIW8, INPLACE64_GRAPH_COPY,
      &        INPLACE64_RESTORE_GRAPH)
+#endif
         ELSE
               IF (LPOK) WRITE(LP,*)
      &        "Internal error in METIS wrappers, METIS_IDX_SIZE=",
@@ -720,7 +732,7 @@
                      INFO( 1 ) = -7
                      INFO( 2 ) = N*KEEP(10)
                ENDIF
-               CALL DMUMPS_ANA_GNEW(N,NZ8,IRN(1),ICN(1),IW(1),LIW8,
+               CALL DMUMPS_ANA_GNEW(N,NZ8,IRN,ICN,IW(1),LIW8,
      &              IPE, PTRAR(1,2),
      &              IPQ8, IWL1, IWFR8, KEEP8(126), KEEP8(127),
      &              INFO(1), INFO(2), ICNTL, symmetry, KEEP(50),
@@ -758,7 +770,7 @@
             DEALLOCATE(WTEMP)
            ENDIF  
          ELSE
-            CALL DMUMPS_ANA_J(N, NZ8, IRN(1), ICN(1), IKEEP1(1), IW(1),
+            CALL DMUMPS_ANA_J(N, NZ8, IRN, ICN, IKEEP1, IW,
      &           LIW8, IPE,
      &           PTRAR(1,2), IWL1, IWFR8,
      &           INFO(1),INFO(2), MP)
@@ -767,8 +779,8 @@
             ELSE 
                ITEMP = SIZE_SCHUR
             ENDIF
-            CALL DMUMPS_ANA_K(N, IPE, IW, LIW8, IWFR8, IKEEP1(1),
-     &              IKEEP2(1), IWL1,
+            CALL DMUMPS_ANA_K(N, IPE, IW, LIW8, IWFR8, IKEEP1,
+     &              IKEEP2, IWL1,
      &              PTRAR, NCMPA, ITEMP, PARENT)
             IF (KEEP(60) .EQ. 0) THEN
                IF (KEEP(60) .EQ. 1) THEN
@@ -793,8 +805,8 @@
          GOTO 90                
       ENDIF
       CALL DMUMPS_ANA_LNEW
-     &     (N, PARENT, IWL1, IKEEP1(1), IKEEP2(1), IKEEP3(1),
-     &     NFSIZ(1), PTRAR, INFO(6), FILS(1), FRERE(1), 
+     &     (N, PARENT, IWL1, IKEEP1, IKEEP2, IKEEP3,
+     &     NFSIZ, PTRAR, INFO(6), FILS, FRERE, 
      &     PTRAR(1,3), NEMIN, WTEMP, KEEP(60),
      &     KEEP(20),KEEP(38),PTRAR(1,2),KEEP(104),IW(1),KEEP(50), 
      &     ICNTL(13), KEEP(37), NSLAVES, KEEP(250).EQ.1)
@@ -861,7 +873,7 @@
        IF (KEEP(210).EQ.1) THEN
         SPLITROOT = .FALSE. 
         IF ( KEEP(62).GE.1) THEN
-          CALL DMUMPS_CUTNODES(N, FRERE(1), FILS(1), NFSIZ(1), INFO(6),
+          CALL DMUMPS_CUTNODES(N, FRERE, FILS, NFSIZ, INFO(6),
      &                       NSLAVES, KEEP,KEEP8, SPLITROOT,
      &                       MP, LDIAG, INFO(1), INFO(2))
           IF (INFO(1).LT.0) GOTO 90 
@@ -879,7 +891,7 @@
       ENDIF
       SPLITROOT = (SPLITROOT.AND.( (KEEP(60).EQ.0) ))
       IF (SPLITROOT) THEN
-         CALL DMUMPS_CUTNODES(N, FRERE(1), FILS(1), NFSIZ(1), INFO(6),
+         CALL DMUMPS_CUTNODES(N, FRERE, FILS, NFSIZ, INFO(6),
      &                    NSLAVES, KEEP,KEEP8, SPLITROOT,
      &                    MP, LDIAG, INFO(1), INFO(2))
          IF (INFO(1).LT.0) GOTO 90 
@@ -3715,14 +3733,16 @@
  70      CONTINUE
       END IF
       IF (id%KEEP(54) .EQ. 3) THEN
-         CALL MPI_ALLREDUCE(IWORK1(1), PTRAR(1,1), id%N, MPI_INTEGER8,
-     &        MPI_SUM, id%COMM, IERR )
-         CALL MPI_ALLREDUCE(IWORK2(1), PTRAR(1,2), id%N, MPI_INTEGER8,
-     &        MPI_SUM, id%COMM, IERR )
+!         CALL MPI_ALLREDUCE(IWORK1(1), PTRAR(1,1), id%N, MPI_INTEGER8,
+!     &        MPI_SUM, id%COMM, IERR )
+         CALL MUMPS_COPY_INTEGER8(IWORK1(1), PTRAR(1,1), id%N) ! ssg !
+!         CALL MPI_ALLREDUCE(IWORK2(1), PTRAR(1,2), id%N, MPI_INTEGER8,
+!     &        MPI_SUM, id%COMM, IERR )
+         CALL MUMPS_COPY_INTEGER8(IWORK2(1), PTRAR(1,2), id%N)
          deallocate(IWORK2)
       ELSE
-         CALL MPI_BCAST( PTRAR, 2*id%N, MPI_INTEGER8,
-     &        0, id%COMM, IERR )
+!         CALL MPI_BCAST( PTRAR, 2*id%N, MPI_INTEGER8,
+!     &        0, id%COMM, IERR ) ! ssg !
       END IF
       RETURN
       END SUBROUTINE DMUMPS_ANA_N_PAR
